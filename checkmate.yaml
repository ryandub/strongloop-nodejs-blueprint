blueprint:
  id: 1cd3b25ea36547b79969b8d20a870349 
  name: StrongLoop Suite 
  version: 1.0.0
  services:
    strongloop:
      component:
        name: strongloop
        type: application
      constraints:
      - count: 1
      display-name: StrongLoop Suite
  options:
    # Deployment Options
    region:
      label: Region
      type: string
      required: true
      default: ORD
      display-hints:
        group: deployment
        list-type: region
        choice:
        - DFW
        - ORD
        - LON
        - SYD
        - IAD
      constrains:
      - setting: region
        provider: load-balancer
    # Application Options
    url:
      label: Site Address
      description: 'Domain name to access deployment'
      type: url
      required: true
      default: http://example.com/
      display-hints:
        group: application
        order: 1
        default-protocol: http
        sample: http://example.com/
      constraints:
      - protocols: [http]
        message: protocols are limited to http only
      - regex: '^([a-zA-Z]{2,}?\:\/\/[a-zA-Z0-9\-]+(?:\.[a-zA-Z0-9\-]+)*\.[a-zA-Z]{2,6}(?:\/?|(?:\/[\w\-]+)*)(?:\/?|\/\w+\.[a-zA-Z]{2,4}(?:\?[\w]+\=[\w\-]+)?)?(?:\&[\w]+\=[\w\-]+)*)$'
        message: must be a valid web address
      constrains:
      - setting: domain
        service: strongloop
        attribute: hostname
    username:
      label: System Username
      type: string
      description: The user name used to access the server 
      required: true
      default: strongloop
      display-hints:
        group: application
        order: 2
      constrains:
      - setting: resources/strongloop_user/name
      constraints:
      - regex: '^[a-z_][a-z0-9_-]*?$'
        message: Must be lowercase, start with a letter or '_' and not contain special characters other than '_' or '-'.
    password:
      label: System Password
      type: password
      description: Password to use for system user 
      default: '=generate_password(min_length=12, required_chars=["0123456789", "abcdefghijklmnopqrstuvwxyz", "ABCDEFGHIJKLMNOPQRSTUVWXYZ"])'
      help: |
        Optional: Password provided must be between 8 and 32 characters in length.
      display-hints:
        group: application
        order: 3
      constraints:
      - regex: '^(?=.*).{8,32}$'
        message: must be between 8 and 32 characters long
      # disabling until generate-password can handle it!
      #- regex: '^(?=.*\d)'
      #  message: must contain a digit
      #- regex: '^(?=.*[a-z])'
      #  message: must contain a lower case letter
      #- regex: '^(?=.*[A-Z])'
      #  message: must contain an upper case letter
      constrains:
      - setting: resources/strongloop_user/password
    app_name:
      label: Application Name
      type: string
      default: my-app
      display-hints:
        group: application
        order: 4
        sample: my-app
      constraints:
      - regex: '^[a-zA-Z0-9][a-zA-Z0-9_-]*?$'
        message: Must start with a letter or number and not contain any special characters other than '_' or '-'.
      constrains:
      - setting: app_name
        service: strongloop
        resource_type: application
    # Server Options
    os:
      label: Operating System
      type: string
      description: The operating system for the server.
      default: Ubuntu 12.04
      display-hints:
        group: server
        order: 2
        list-type: compute.os
        choice:
        - name: "Ubuntu 12.04 LTS (Precise Pangolin)"
          value: Ubuntu 12.04
      constraints:
      - in: ["Ubuntu 12.04"]
        message: unsupported operating system
      constrains:
      - setting: os
        resource_type: compute
        service: strongloop
    server_size:
      label: Server Size
      type: integer
      default: 1024
      description: The size of the server instance in MB of RAM.
      display-hints:
        group: server
        order: 3
        list-type: compute.memory
        choice:
        - name: 512 MB (20 GB disk)
          value: 512
        - name: 1 GB (40 GB disk)
          value: 1024
        - name: 2 GB (80 GB disk)
          value: 2048
        - name: 4 GB (160 GB disk)
          value: 4096
        - name: 8 GB (320 GB disk)
          value: 8192
        - name: 15 GB (620 GB disk)
          value: 15000
        - name: 30 GB (1.2 TB disk)
          value: 30720
      constrains:
      - setting: memory
        service: strongloop
        resource_type: compute
  resources:
    "strongloop_user":
      type: user
      constrains:
      - setting: username
        service: strongloop
        resource_type: application
        attribute: name
      - setting: password
        service: strongloop
        resource_type: application
        attribute: password
  meta-data:
    schema-version: v0.7
    blueprint-type: Application
    application-name: StrongLoop
    application-version: 1.0
    flavor: Single Linux server with StrongLoop Suite 
    flavor-weight: 1
    reach-info:
      option-groups:
      - application: StrongLoop Options
      - server: Server Options
      - dns: DNS Options
      tattoo: https://600861890ddb34a8670a-744765205721eed93c384dae790e86aa.ssl.cf2.rackcdn.com/strongloop-tattoo.png 
      icon-20x20: https://600861890ddb34a8670a-744765205721eed93c384dae790e86aa.ssl.cf2.rackcdn.com/strongloop-icon-20x20.png 
      rackspace-supported: false
  documentation:
    abstract: |
      [StrongLoop](http://strongloop.com) Suite is a modern app platform with Node.js, NPM and tooling for use in production.
      Backed by professional support plans from StrongLoop.
    guide: |
      This blueprint includes a single server running StrongLoop Suite.

      This blueprint's performance has not been measured.
    instructions: |
      #### Getting Started

      This deployment provides a single Linux server running StrongLoop Suite. Once the deployment is complete, you can find a demo LoopBack application
      in the home directory for the user provided (default is "strongloop"). You can access this demo application by navigating to the IP address of the
      server on port 3000 (for example, https://1.2.3.4:3000). For more information on how to use LoopBack, see this [quick start guide](http://docs.strongloop.com/loopback/).

      To make your own application, SSH to the server using the user and password provided and follow the guides below. See
      [docs.strongloop.com](http://docs.strongloop.com/) for more information about StrongLoop Suite.
      
      #### StrongLoop Suite
      [StrongLoop.com](http://strongloop.com)
      
      An API tier for connecting enterprise data to devices and browsers. Created by the people who write Node.js.
      
      StrongLoop Suite comes with a private mBaaS, an operations and performance monitoring console, a certified distribution of Node.js and tooling, and of course, technical support from the Node experts.
      
      ##### [LoopBack](http://alpha.strongloop.com/strongloop-suite/loopback/) Private mBaaS
      An Enterprise-ready, open source mobile API framework, built and supported by StrongLoop and the Node.js community, that auto-generates mobile SDKs.
      
      ##### [StrongOps](http://alpha.strongloop.com/strongloop-suite/strongops/)
      Operations Console
      Get detailed real-time performance monitoring and operational support for Node.js applications with CPU Profiling, Event Loop inspection, and more.
      
      ##### [StrongNode](http://alpha.strongloop.com/strongloop-suite/strongnode/)
      Certified Package Node.js
      Get your development off to the right start by standardizing on a certified and tested package of Node.js, including a complementary toolset backed by StrongLoop.
      
      ##### LoopBack Command Line Iterface Getting Started with the sls-sample-app
      ```sh
      $slc lb example
      $slc cd sls-sample-app
      $slc install
      $slc run .
      ```
      
      ##### LoopBack Command Line Iterface Getting Started from scratch
      ```sh
      $mkdir myLoopBackProject
      $cd myLoopBackProject
      $slc project myLoopBackApp
      $slc install
      $slc lb model products
      $slc lb model customers
      $slc lb model stores
      $slc lb model cars
      $cd myLoopBackApp
      $slc run .
      ```
      
      ##### Some helpful links
      
      [StrongLoop Docs](http://docs.strongloop.com)
      
      [LoopBack iOS Examples: TableView, MapView, Login, Leaderboard, RemoteMethod Invocation](http://github.com/strongloop-community/loopback-examples-ios)
      
      [LoopBack Xamarin Mono Examples](http://github.com/strongloop-community/loopback-examples-xamarin)
      
      [LoopBack Appcelerator Titanium Examples](http://github.com/strongloop-community/loopback-examples-titanium)
      
      [StrongLoop Ops Dashboard](http://strongloop.com/ops/dashboard)

  display-outputs:
    "Site Address":
      type: url
      source: options://url
      extra-sources:
        ipv4: "services://strongloop/ip"
      order: 1
      group: application
    "Server Private SSH Key":
      type: private-key
      source: "resources://deployment-keys/instance/private_key"
      order: 2
      group: application
      is-secret: true
    "System User":
      source: "resources://strongloop_user/instance/username"
      group: application
      order: 2
      type: string
    "System Password":
      source: "resources://strongloop_user/instance/password"
      type: password
      group: application
      order: 3
      is-secret: true
environment:
  description: This environment uses next-gen cloud servers.
  name: Next-Gen Open Cloud
  providers:
    chef-solo:
      provides:
      - application: http
      vendor: opscode
      constraints:
      - source: %repo_url%
    nova: {}
    database: {}
    common:
      vendor: rackspace
inputs:
  blueprint:
    url: http://strongloop.example.com/
    region: ORD
    username: strongloop
    server_size: 1024
    password: Ul345678
    app-name: my-app
